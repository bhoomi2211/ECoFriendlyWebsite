{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DELL/Desktop/Eco_friendly%20_website/frontend/src/context/CartContext.jsx"],"sourcesContent":["'use client';\r\nconst { createContext, useState, useContext, useEffect } = require(\"react\");\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n\r\n    // Load cart from localStorage on mount\r\n    useEffect(() => {\r\n        const storedCart = localStorage.getItem(\"cartItems\");\r\n        if (storedCart) {\r\n            setCartItems(JSON.parse(storedCart));\r\n        }\r\n    }, []);\r\n\r\n    // Save cart to localStorage whenever it changes\r\n    useEffect(() => {\r\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n    }, [cartItems]);\r\n\r\n    // Add product to cart\r\n    const addToCart = (product) => {\r\n        setCartItems(prev => {\r\n            const existing = prev.find(item => item._id === product._id);\r\n            if (existing) {\r\n                return prev.map(item =>\r\n                    item._id === product._id\r\n                        ? { ...item, quantity: item.quantity + 1 }\r\n                        : item\r\n                );\r\n            }\r\n            return [...prev, { ...product, quantity: 1 }];\r\n        });\r\n    };\r\n\r\n    // Remove product from cart\r\n    const removeFromCart = (productId) => {\r\n        setCartItems(prev => prev.filter(item => item._id !== productId));\r\n    };\r\n\r\n    // Clear all cart items\r\n    const clearCart = () => {\r\n        setCartItems([]);\r\n    };\r\n\r\n    // Update quantity of a product\r\n    const updateQuantity = (productId, quantity) => {\r\n        setCartItems(prev =>\r\n            prev.map(item =>\r\n                item._id === productId ? { ...item, quantity } : item\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={{\r\n            cartItems,\r\n            setCartItems,\r\n            addToCart,\r\n            removeFromCart,\r\n            clearCart,\r\n            updateQuantity,\r\n        }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    );\r\n}\r\n\r\nconst UseCartContext = () => useContext(CartContext);\r\n\r\nexport default UseCartContext;"],"names":[],"mappings":";;;;;;;AAAA;;AACA,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE;AAExD,MAAM,cAAc;AAEb,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,SAAS,EAAE;IAE7C,uCAAuC;IACvC,UAAU;QACN,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACZ,aAAa,KAAK,KAAK,CAAC;QAC5B;IACJ,GAAG,EAAE;IAEL,gDAAgD;IAChD,UAAU;QACN,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;IACrD,GAAG;QAAC;KAAU;IAEd,sBAAsB;IACtB,MAAM,YAAY,CAAC;QACf,aAAa,CAAA;YACT,MAAM,WAAW,KAAK,IAAI,CAAC,CAAA,OAAQ,KAAK,GAAG,KAAK,QAAQ,GAAG;YAC3D,IAAI,UAAU;gBACV,OAAO,KAAK,GAAG,CAAC,CAAA,OACZ,KAAK,GAAG,KAAK,QAAQ,GAAG,GAClB;wBAAE,GAAG,IAAI;wBAAE,UAAU,KAAK,QAAQ,GAAG;oBAAE,IACvC;YAEd;YACA,OAAO;mBAAI;gBAAM;oBAAE,GAAG,OAAO;oBAAE,UAAU;gBAAE;aAAE;QACjD;IACJ;IAEA,2BAA2B;IAC3B,MAAM,iBAAiB,CAAC;QACpB,aAAa,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,GAAG,KAAK;IAC1D;IAEA,uBAAuB;IACvB,MAAM,YAAY;QACd,aAAa,EAAE;IACnB;IAEA,+BAA+B;IAC/B,MAAM,iBAAiB,CAAC,WAAW;QAC/B,aAAa,CAAA,OACT,KAAK,GAAG,CAAC,CAAA,OACL,KAAK,GAAG,KAAK,YAAY;oBAAE,GAAG,IAAI;oBAAE;gBAAS,IAAI;IAG7D;IAEA,qBACI,8OAAC,YAAY,QAAQ;QAAC,OAAO;YACzB;YACA;YACA;YACA;YACA;YACA;QACJ;kBACK;;;;;;AAGb;AAEA,MAAM,iBAAiB,IAAM,WAAW;uCAEzB","debugId":null}}]
}